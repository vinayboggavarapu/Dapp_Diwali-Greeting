{"ast":null,"code":"var _jsxFileName = \"E:\\\\diwali\\\\diwali_project\\\\src\\\\app.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport '../src/index.css';\nimport GSAP from 'gsap';\nimport ethers from 'ethers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Main() {\n  _s();\n  let eff = useRef();\n  let par = useRef();\n  const [text, setText] = useState();\n  function mask() {\n    let account;\n    if (window.ethereum) {\n      window.ethereum.request({\n        method: 'eth_requestAccounts'\n      }).then(accounts => {\n        account = accounts[0];\n        setText(account);\n      });\n    } else {\n      alert('Please Install MetaMask');\n    }\n  }\n  useEffect(() => {\n    GSAP.from(eff, {\n      opacity: 0,\n      x: 40,\n      duration: 2\n    });\n  }, []);\n  useEffect(() => {\n    GSAP.from(par, {\n      opacity: 0,\n      y: -40,\n      duration: 2\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Frame\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"message\",\n      ref: el => eff = el,\n      children: \"Hi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"work\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"button\",\n        ref: el => par = el,\n        onClick: mask,\n        children: \"Connect Metamask\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n}\n_s(Main, \"VuhxmY2r+AHiOkR7xQH6Mqws63Q=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useEffect","useRef","useState","GSAP","ethers","Main","eff","par","text","setText","mask","account","window","ethereum","request","method","then","accounts","alert","from","opacity","x","duration","y","el"],"sources":["E:/diwali/diwali_project/src/app.js"],"sourcesContent":["import React,{useEffect,useRef,useState} from 'react'\r\nimport '../src/index.css'\r\nimport GSAP from 'gsap'\r\nimport ethers from 'ethers'\r\nfunction Main(){\r\n    let eff=useRef();\r\n    let par=useRef();\r\n    const [text,setText]=useState();\r\n    function mask(){\r\n        let account;\r\n        if(window.ethereum){\r\n            window.ethereum.request({method:'eth_requestAccounts'}).then(accounts=>{\r\n                account=accounts[0];\r\n                setText(account);\r\n            })\r\n        }\r\n        else{\r\n            alert('Please Install MetaMask')\r\n        }\r\n        \r\n    }\r\n    useEffect(()=>{GSAP.from(eff,{opacity:0,x:40,duration:2})},[]);\r\n    useEffect(()=>{GSAP.from(par,{opacity:0,y:-40,duration:2})});\r\n    return(\r\n        <div className='Frame' >\r\n            <h1 className='message' ref={el=>eff=el} >Hi</h1>\r\n            <h2>{text}</h2>\r\n            <div class='work'>\r\n                <button className='button' ref={el=>par=el} onClick={mask}>Connect Metamask</button>\r\n            </div>\r\n            {/* <p>Enter your message</p> */}\r\n        </div>\r\n    )\r\n}\r\nexport default Main;"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,SAAS,EAACC,MAAM,EAACC,QAAQ,QAAO,OAAO;AACrD,OAAO,kBAAkB;AACzB,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,MAAM,MAAM,QAAQ;AAAA;AAC3B,SAASC,IAAI,GAAE;EAAA;EACX,IAAIC,GAAG,GAACL,MAAM,EAAE;EAChB,IAAIM,GAAG,GAACN,MAAM,EAAE;EAChB,MAAM,CAACO,IAAI,EAACC,OAAO,CAAC,GAACP,QAAQ,EAAE;EAC/B,SAASQ,IAAI,GAAE;IACX,IAAIC,OAAO;IACX,IAAGC,MAAM,CAACC,QAAQ,EAAC;MACfD,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;QAACC,MAAM,EAAC;MAAqB,CAAC,CAAC,CAACC,IAAI,CAACC,QAAQ,IAAE;QACnEN,OAAO,GAACM,QAAQ,CAAC,CAAC,CAAC;QACnBR,OAAO,CAACE,OAAO,CAAC;MACpB,CAAC,CAAC;IACN,CAAC,MACG;MACAO,KAAK,CAAC,yBAAyB,CAAC;IACpC;EAEJ;EACAlB,SAAS,CAAC,MAAI;IAACG,IAAI,CAACgB,IAAI,CAACb,GAAG,EAAC;MAACc,OAAO,EAAC,CAAC;MAACC,CAAC,EAAC,EAAE;MAACC,QAAQ,EAAC;IAAC,CAAC,CAAC;EAAA,CAAC,EAAC,EAAE,CAAC;EAC9DtB,SAAS,CAAC,MAAI;IAACG,IAAI,CAACgB,IAAI,CAACZ,GAAG,EAAC;MAACa,OAAO,EAAC,CAAC;MAACG,CAAC,EAAC,CAAC,EAAE;MAACD,QAAQ,EAAC;IAAC,CAAC,CAAC;EAAA,CAAC,CAAC;EAC5D,oBACI;IAAK,SAAS,EAAC,OAAO;IAAA,wBAClB;MAAI,SAAS,EAAC,SAAS;MAAC,GAAG,EAAEE,EAAE,IAAElB,GAAG,GAACkB,EAAG;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAS,eACjD;MAAA,UAAKhB;IAAI;MAAA;MAAA;MAAA;IAAA,QAAM,eACf;MAAK,KAAK,EAAC,MAAM;MAAA,uBACb;QAAQ,SAAS,EAAC,QAAQ;QAAC,GAAG,EAAEgB,EAAE,IAAEjB,GAAG,GAACiB,EAAG;QAAC,OAAO,EAAEd,IAAK;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IAA0B;MAAA;MAAA;MAAA;IAAA,QAClF;EAAA;IAAA;IAAA;IAAA;EAAA,QAEJ;AAEd;AAAC,GA7BQL,IAAI;AAAA,KAAJA,IAAI;AA8Bb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module"}